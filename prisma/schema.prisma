generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement())
  role String @unique
  User User[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roleId    Int      @default(2)
  Orders    Orders[]
  role      Role     @relation(fields: [roleId], references: [id])
}

model Category {
  id        Int        @id @default(autoincrement())
  category  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  imgTag    String?
  products  Products[]
}

model Products {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  price       Float
  imgUrl      String
  categoryId  Int
  description String
  name        String
  OrderItems  OrderItems[]
  category    Category     @relation(fields: [categoryId], references: [id])
}

model Status {
  id     Int      @id @default(autoincrement())
  state  String   @unique @default("pending")
  Orders Orders[]
}

model ShippingDetails {
  id        Int      @id @default(autoincrement())
  domicilio String
  localidad String
  Orders    Orders[]
}

model Orders {
  id                String          @id @default(uuid())
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  paymentId         String?
  merchanOrderId    String?
  userId            Int
  statusId          Int
  ShippingPrice     Float
  subTotal          Float
  total             Float
  shippingDetailsId Int
  OrderItems        OrderItems[]
  shippingDetails   ShippingDetails @relation(fields: [shippingDetailsId], references: [id])
  status            Status          @relation(fields: [statusId], references: [id])
  user              User            @relation(fields: [userId], references: [id])
}

model OrderItems {
  id         Int      @id @default(autoincrement())
  quantity   Int
  unityPrice Float
  orderId    String
  productId  Int
  order      Orders   @relation(fields: [orderId], references: [id])
  product    Products @relation(fields: [productId], references: [id])
}
